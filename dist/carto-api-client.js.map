{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c99a3ae774c7ac63da80","webpack:///./src/clients/public.js","webpack:///./src/utils/request.js","webpack:///./src/index.js","webpack:///./src/constants/request.js","webpack:///./src/utils/general.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./src/clients/authenticated.js","webpack:///./src/constants/paths.js","webpack:///./src/errors/api-client.js"],"names":["PublicClient","config","baseUrl","apiKey","get","args","request","put","post","delete","setConfig","getConfig","getBaseUrl","getApiKey","getApiKeyParam","setClientBaseUrlFromLocation","location","host","protocol","href","PATH","RequestUtils","getPathFromHref","method","uriParts","options","getRelativeURIPath","API_KEY","BASE_URL","URL","OPTIONS","getOptions","fetch","then","response","json","USER_REGEX","additional","toUpperCase","headers","Request","Default","HEADERS","credentials","CREDENTIALS","paramsToURI","params","DEFAULT_PARAMS","Utils","isObject","stringifyParams","Object","keys","map","encodeURIComponent","key","join","isArray","regExp","match","AuthenticatedClient","ApiClientError","freeze","value","OBJECT_TYPE","prototype","toString","call","length","getUser","URI_PARAMS","Paths","CONFIG","deleteUser","payload","body","JSON","stringify","updateUser","getVisualization","vizID","VIZ_PATH","VIZ","getVisualizations","getVisualizationLikes","ApiDataPath","LIKES","getVisualizationLikesDetailed","LIKES_DETAILED","getVisualizationLike","LIKE","likeVisualization","unlikeVisualization","getVisualizationWatching","WATCHING","notifyVisualizationWatching","getVisualizationPreview","width","height","WIDTH","HEIGHT","VIZ_PREVIEW","STATIC","PNG_EXTENSION","getMap","mapID","MAP_PATH","MAPS","COLUMNS","TABLES","ApiVersionPath","API_V1_URI","API_V2_URI","API_V3_URI","send","data","errors","message","name","stack","Error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC7DA;;AAEA;;;;AAEA;;;;;;;;;;;AAWO,IAAMA,sCAAe;AAC1BC,UAAQ;AACNC,aAAS,EADH;AAENC,YAAQ;AAFF,GADkB;;AAM1B;;;;;;;;;;;;;;AAcAC,KApB0B,iBAoBZ;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AACZ,WAAO,KAAKC,OAAL,cAAa,KAAb,4BAAuBD,IAAvB,GAAP;AACD,GAtByB;;;AAwB1B;;;;;;;;;;;;;;AAcAE,KAtC0B,iBAsCZ;AAAA,uCAANF,IAAM;AAANA,UAAM;AAAA;;AACZ,WAAO,KAAKC,OAAL,cAAa,KAAb,4BAAuBD,IAAvB,GAAP;AACD,GAxCyB;;;AA0C1B;;;;;;;;;;;;;;AAcAG,MAxD0B,kBAwDX;AAAA,uCAANH,IAAM;AAANA,UAAM;AAAA;;AACb,WAAO,KAAKC,OAAL,cAAa,MAAb,4BAAwBD,IAAxB,GAAP;AACD,GA1DyB;;;AA4D1B;;;;;;;;;;;;;;AAcAI,QA1E0B,qBA0ET;AAAA,uCAANJ,IAAM;AAANA,UAAM;AAAA;;AACf,WAAO,KAAKC,OAAL,cAAa,QAAb,4BAA0BD,IAA1B,GAAP;AACD,GA5EyB;;;AA8E1B;;;;;;;;;AASAK,WAvF0B,qBAuFfT,MAvFe,EAuFP;AACjB,SAAKA,MAAL,gBACK,KAAKA,MADV,EAEKA,MAFL;;AAKA,WAAO,IAAP;AACD,GA9FyB;;;AAgG1B;;;;;;AAMAU,WAtG0B,uBAsGb;AACX,WAAO,KAAKV,MAAZ;AACD,GAxGyB;;;AA0G1B;;;;;;AAMAW,YAhH0B,wBAgHZ;AACZ,WAAO,KAAKX,MAAL,CAAYC,OAAZ,IAAuB,EAA9B;AACD,GAlHyB;;;AAoH1B;;;;;;AAMAW,WA1H0B,uBA0Hb;AACX,WAAO,KAAKZ,MAAL,CAAYE,MAAZ,IAAsB,EAA7B;AACD,GA5HyB;;;AA8H1B;;;;;;AAMAW,gBApI0B,4BAoIR;AAChB,WAAO,KAAKb,MAAL,CAAYE,MAAZ,iBACS,KAAKF,MAAL,CAAYE,MADrB,GAEH,EAFJ;AAGD,GAxIyB;;;AA0I1B;;;;;;;;;AASAY,8BAnJ0B,wCAmJIC,QAnJJ,EAmJc;AAAA,QAC9BC,IAD8B,GACLD,QADK,CAC9BC,IAD8B;AAAA,QACxBC,QADwB,GACLF,QADK,CACxBE,QADwB;AAAA,QACdC,IADc,GACLH,QADK,CACdG,IADc;;AAEtC,QAAMC,OAAOC,sBAAaC,eAAb,CAA6BH,IAA7B,CAAb;;AAEA,SAAKlB,MAAL,CAAYC,OAAZ,GAAyBgB,QAAzB,UAAsCD,IAAtC,GAA6CG,IAA7C;;AAEA,WAAO,IAAP;AACD,GA1JyB;;;AA4J1B;;;;;;;;;;;;;;;AAeAd,SA3K0B,mBA2KjBiB,MA3KiB,EA2KTC,QA3KS,EA2KwB;AAAA,QAAvBC,OAAuB,uEAAb,EAAa;AAAA,QAATvB,OAAS;;AAChD,QAAMkB,OAAOC,sBAAaK,kBAAb,CAAgCF,QAAhC,CAAb;AACA,QAAMG,UAAU,KAAKb,cAAL,EAAhB;AACA,QAAMc,WAAW1B,WAAW,KAAKU,UAAL,EAA5B;;AAEA,QAAMiB,WAASD,QAAT,GAAoBR,IAApB,GAA2BO,OAAjC;AACA,QAAMG,UAAUT,sBAAaU,UAAb,CAAwBN,OAAxB,EAAiCF,MAAjC,CAAhB;;AAEA,WAAOS,MAAMH,GAAN,EAAWC,OAAX,EACJG,IADI,CACC;AAAA,aAAYC,SAASC,IAAT,EAAZ;AAAA,KADD,CAAP;AAED;AArLyB,CAArB,C;;;;;;;;;;;;;;;;ACfP;;AACA;;AAEA,IAAMC,aAAa,6BAAnB;;AAEO,IAAMf,sCAAe;AAC1BU,YAD0B,sBACdN,OADc,EACLF,MADK,EACGc,UADH,EACe;AACvC,wBACKA,UADL,EAEKZ,OAFL;AAGEF,cAAQA,OAAOe,WAAP,EAHV;AAIEC,eAASC,iBAAQC,OAAR,CAAgBC,OAJ3B;AAKEC,mBAAaH,iBAAQC,OAAR,CAAgBG;AAL/B;AAOD,GATyB;AAW1BC,aAX0B,uBAWbC,MAXa,EAWL;AACnB,QAAMC,iBAAiB,EAAvB;;AAEA,WAAOC,eAAMC,QAAN,CAAeH,MAAf,IACH,KAAKI,eAAL,CAAqBJ,MAArB,CADG,GAEHC,cAFJ;AAGD,GAjByB;AAmB1BG,iBAnB0B,2BAmBTJ,MAnBS,EAmBD;AACvB,iBAAWK,OACRC,IADQ,CACHN,MADG,EAERO,GAFQ,CAEJ;AAAA,aAAUC,mBAAmBC,GAAnB,CAAV,SAAqCD,mBAAmBR,OAAOS,GAAP,CAAnB,CAArC;AAAA,KAFI,EAGRC,IAHQ,CAGH,GAHG,CAAX;AAID,GAxByB;AA0B1B9B,oBA1B0B,8BA0BNF,QA1BM,EA0BI;AAC5B,WAAOwB,eAAMS,OAAN,CAAcjC,QAAd,SACAA,SAASgC,IAAT,CAAc,EAAd,CADA,GAEH,EAFJ;AAGD,GA9ByB;AAgC1BlC,iBAhC0B,2BAgCTH,IAhCS,EAgCH;AACrB,QAAMuC,SAASvC,KAAKwC,KAAL,CAAWvB,UAAX,CAAf;AACA,WAAQsB,UAAUA,OAAO,CAAP,CAAX,IAAyB,EAAhC;AACD;AAnCyB,CAArB,C;;;;;;;;;;;;;ACLP;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAmCe,EAAE1D,kCAAF,EAAgB4D,uDAAhB,EAAqCC,yCAArC,E;;;;;;;;;;;;;ACvCR,IAAMrB,4BAAUW,OAAOW,MAAP,CAAc;AACnCrB,WAASU,OAAOW,MAAP,CAAc;AACrBpB,aAASS,OAAOW,MAAP,CAAc;AACrB,gBAAU,kBADW;AAErB,sBAAgB,iCAFK;AAGrB,eAAS;AAHY,KAAd,CADY;AAMrBlB,iBAAa;AANQ,GAAd;AAD0B,CAAd,CAAhB,C;;;;;;;;;;;;ACAA,IAAMI,wBAAQ;AACnBC,UADmB,oBACTc,KADS,EACF;AACf,QAAMC,cAAc,iBAApB;;AAEA,WAAOD,SACLZ,OAAOc,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,KAA/B,MAA0CC,WADrC,IAELb,OAAOC,IAAP,CAAYW,KAAZ,EAAmBK,MAFrB;AAGD,GAPkB;AASnBX,SATmB,mBASVM,KATU,EASH;AACd,QAAMC,cAAc,gBAApB;;AAEA,WAAOD,SAASZ,OAAOc,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,KAA/B,MAA0CC,WAA1D;AACD;AAbkB,CAAd,C;;;;;;ACAP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;;AAEA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;AACA,wCAAwC,4BAA4B;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD,SAAS;AACT;AACA,SAAS;AACT,8EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,uBAAuB;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAC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","file":"carto-api-client.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"carto-api-client\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"carto-api-client\"] = factory();\n\telse\n\t\troot[\"carto-api-client\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c99a3ae774c7ac63da80","import { RequestUtils } from '../utils/request';\n\nimport 'whatwg-fetch';\n\n/**\n * Carto Public Client\n *\n * @param {Object} config\n * @param {string} config.baseUrl - User base url\n * @param {string} config.apiKey - User api key\n *\n * @namespace CartoApiClient.PublicClient\n * @return {PublicClient}\n */\n\nexport const PublicClient = {\n  config: {\n    baseUrl: '',\n    apiKey: null\n  },\n\n  /**\n   * Send a GET request\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @example\n   * client.get(['/api/v3', '/me'], options)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @param {Array} path - an array of strings to build the request path, that will be added to the user's baseUrl\n   * @param {Object} options - request options\n   *\n   * @returns {Promise} fetch response in json format\n   */\n  get (...args) {\n    return this.request('get', ...args);\n  },\n\n  /**\n   * Send a PUT request\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @example\n   * client.put(['/api/v3/me'], options)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @param {Array} path - an array of strings to build the request path, that will be added to the user's baseUrl\n   * @param {Object} options - request options\n   *\n   * @returns {Promise} fetch response in json format\n   */\n  put (...args) {\n    return this.request('put', ...args);\n  },\n\n  /**\n   * Send a POST request\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @example\n   * client.post(['/api/v3/me'], options)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @param {Array} path - an array of strings to build the request path, that will be added to the user's baseUrl\n   * @param {Object} options - request options\n   *\n   * @returns {Promise} fetch response in json format\n   */\n  post (...args) {\n    return this.request('post', ...args);\n  },\n\n  /**\n   * Send a DELETE request\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @example\n   * client.delete(['/api/v3/me'], options)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @param {Array} path - an array of strings to build the request path, that will be added to the user's baseUrl\n   * @param {Object} options - request options\n   *\n   * @returns {Promise} fetch response in json format\n   */\n  delete (...args) {\n    return this.request('delete', ...args);\n  },\n\n  /**\n   * Set static config\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @param {Object} config\n   * @param {string} config.baseUrl - User base url\n   *\n   * @returns {Object} current PublicClient\n   */\n  setConfig (config) {\n    this.config = {\n      ...this.config,\n      ...config\n    };\n\n    return this;\n  },\n\n  /**\n   * Get config\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @returns {string} Client config\n   */\n  getConfig () {\n    return this.config;\n  },\n\n  /**\n   * Get baseUrl\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @returns {string} Client baseUrl\n   */\n  getBaseUrl () {\n    return this.config.baseUrl || '';\n  },\n\n  /**\n   * Get apiKey\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @returns {string} Client apiKey\n   */\n  getApiKey () {\n    return this.config.apiKey || '';\n  },\n\n  /**\n   * Get user's api key as a URL param if there is an api key\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @returns {string} URL api key param\n   */\n  getApiKeyParam () {\n    return this.config.apiKey\n      ? `?api_key=${this.config.apiKey}`\n      : '';\n  },\n\n  /**\n   * Set user's base url from a given location\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @returns {Object} location - window.location\n   * @returns {Object} location.host\n   * @returns {Object} location.protocol\n   * @returns {Object} location.href\n   */\n  setClientBaseUrlFromLocation (location) {\n    const { host, protocol, href } = location;\n    const PATH = RequestUtils.getPathFromHref(href);\n\n    this.config.baseUrl = `${protocol}//${host}${PATH}`;\n\n    return this;\n  },\n\n  /**\n   * Send a request\n   *\n   * @memberof CartoApiClient.PublicClient\n   * @example\n   * client.request('post', ['/api/v3/me'], options)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @param {string} - request method\n   * @param {Array} - an array of strings to build the request path, that will be added to the user's baseUrl\n   * @param {Object} - request options\n   *\n   * @returns {Promise} fetch response in json format\n   */\n  request (method, uriParts, options = {}, baseUrl) {\n    const PATH = RequestUtils.getRelativeURIPath(uriParts);\n    const API_KEY = this.getApiKeyParam();\n    const BASE_URL = baseUrl || this.getBaseUrl();\n\n    const URL = `${BASE_URL}${PATH}${API_KEY}`;\n    const OPTIONS = RequestUtils.getOptions(options, method);\n\n    return fetch(URL, OPTIONS)\n      .then(response => response.json());\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/clients/public.js","import { Request } from '../constants/request';\nimport { Utils } from '../utils/general';\n\nconst USER_REGEX = /(\\/(u|user)\\/[a-z0-9\\-]+)\\//;\n\nexport const RequestUtils = {\n  getOptions (options, method, additional) {\n    return {\n      ...additional,\n      ...options,\n      method: method.toUpperCase(),\n      headers: Request.Default.HEADERS,\n      credentials: Request.Default.CREDENTIALS\n    };\n  },\n\n  paramsToURI (params) {\n    const DEFAULT_PARAMS = '';\n\n    return Utils.isObject(params)\n      ? this.stringifyParams(params)\n      : DEFAULT_PARAMS;\n  },\n\n  stringifyParams (params) {\n    return `?${Object\n      .keys(params)\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n      .join('&')}`;\n  },\n\n  getRelativeURIPath (uriParts) {\n    return Utils.isArray(uriParts)\n      ? `${uriParts.join('')}`\n      : '';\n  },\n\n  getPathFromHref (href) {\n    const regExp = href.match(USER_REGEX);\n    return (regExp && regExp[1]) || '';\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/request.js","import { PublicClient } from './clients/public';\nimport { AuthenticatedClient } from './clients/authenticated';\nimport { ApiClientError } from './errors/api-client';\n\n/**\n *\n * @namespace CartoApiClient\n * @summary JavaScript client for cartodb API\n *\n * @description\n *\n * This is the entry point for carto-api-client.\n *\n * This client enables interaction with the cartodb API by using REST requests.\n * There are two clients: PublicClient and AuthenticatedClient.\n * To interact with the API, you need to have a CARTO account.\n * In order to do so, you have to provide your account base url, which has the format https://username.carto.com or https://organization.carto.com/u/username.\n * In addition, you have to be authenticated to obtain private information.\n *\n * It can be used both in the server and the client side.\n *\n * @param {Object} staticConfig\n * @param {string} staticConfig.baseUrl - User base url\n *\n * @requires module:whatwg-fetch\n *\n * @example\n * var CartoApiClient = require('carto-api-client');\n * var client = CartoApiClient.AuthenticatedClient.setConfig({\n *   baseUrl: 'foobar.com',\n *   apiKey: '1234567' // optional\n * });\n *\n * client.getUser()\n *   .then(console.log)\n *   .catch(console.error);\n *\n */\n\nexport default { PublicClient, AuthenticatedClient, ApiClientError };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export const Request = Object.freeze({\n  Default: Object.freeze({\n    HEADERS: Object.freeze({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      'Cache': 'no-cache'\n    }),\n    CREDENTIALS: 'include'\n  })\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/request.js","export const Utils = {\n  isObject (value) {\n    const OBJECT_TYPE = '[object Object]';\n\n    return value &&\n      Object.prototype.toString.call(value) === OBJECT_TYPE &&\n      Object.keys(value).length;\n  },\n\n  isArray (value) {\n    const OBJECT_TYPE = '[object Array]';\n\n    return value && Object.prototype.toString.call(value) === OBJECT_TYPE;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/general.js","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 5\n// module chunks = 0","import { PublicClient } from './public';\nimport { ApiDataPath, Paths } from '../constants/paths';\nimport { RequestUtils } from '../utils/request';\n\n/**\n * Carto Authenticated Client\n *\n * @namespace CartoApiClient.AuthenticatedClient\n * @extends CartoApiClient.PublicClient\n * @return {AuthenticatedClient} Object that contains methods to interact directly with the API\n */\nexport const AuthenticatedClient = {\n  ...PublicClient,\n\n  /**\n   * Get the user configuration\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.getUser()\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @returns {Promise<object>} fetch user data in json format\n   */\n  getUser (params) {\n    const URI_PARAMS = RequestUtils.paramsToURI(params);\n\n    return this.get([Paths.CONFIG, URI_PARAMS]);\n  },\n\n  /**\n   * Delete a user by passing a password confirmation\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.deleteUser(payload)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @param {Object} payload\n   * @param {Object} payload.deletion_password_confirmation - user's password\n   * @returns {Promise<object>} fetch response in json format\n   */\n  deleteUser (payload) {\n    const OPTIONS = {\n      body: JSON.stringify(payload)\n    };\n    return this.delete([Paths.CONFIG], OPTIONS);\n  },\n\n  /**\n   * Update a user by passing a user config\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.updateUser(payload)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @param {Object} payload\n   * @param {string} payload.user\n   * @param {string} payload.user.username\n   * @param {string} payload.user.email\n   * @param {string} payload.user.avatar_url\n   * @param {string} payload.user.old_password\n   * @param {string} payload.user.new_password\n   * @param {string} payload.user.confirm_password\n   *\n   * @returns {Promise<object>} fetch response in json format\n   */\n  updateUser (payload) {\n    const OPTIONS = {\n      body: JSON.stringify(payload)\n    };\n    return this.put([Paths.CONFIG], OPTIONS);\n  },\n\n  /**\n   * Get a user's visualization\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.getVisualization(vizID, params)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @param {Object} params - set the different params so they can be added to the response object\n   * @param {boolean} params.fetch_related_canonical_visualizations\n   * @param {boolean} params.fetch_user\n   * @param {boolean} params.load_related_canonical_visualizations\n   * @param {boolean} params.related\n   * @param {boolean} params.show_auth_tokens\n   * @param {boolean} params.show_liked\n   * @param {boolean} params.show_likes\n   * @param {boolean} params.show_permission\n   * @param {boolean} params.show_stats\n   * @param {boolean} params.show_synchronization\n   * @param {boolean} params.show_table\n   * @param {boolean} params.show_table_size_and_row_count\n   * @param {boolean} params.show_user\n   * @param {boolean} params.show_user_basemaps\n   * @param {boolean} params.show_uses_builder_features\n   * @param {string} params.password\n   *\n   * @param {Array} params.types\n   * @param {boolean} params.bbox\n   * @param {boolean} params.exclude_raster (default: true)\n   * @param {boolean} params.exclude_shared (default: true)\n   * @param {boolean} params.locked\n   * @param {boolean} params.only_liked (default: true)\n   * @param {boolean} params.only_shared (default: true)\n   * @param {boolean} params.only_with_display_name (default: true)\n   * @param {boolean} params.shared\n   * @param {boolean} params.tags\n   * @param {boolean} params.with_id_or_name\n   * @param {number} params.page\n   * @param {number} params.per_page\n   * @param {string} params.order\n   * @param {string} params.privacy\n   * @param {string} params.type\n   *\n   * @returns {Promise<object>} fetch response in json format\n   */\n  getVisualization (vizID, params) {\n    const VIZ_PATH = `/${vizID}`;\n    const URI_PARAMS = RequestUtils.paramsToURI(params);\n\n    return this.get([Paths.VIZ, VIZ_PATH, URI_PARAMS]);\n  },\n\n  /**\n   * Get user's visualizations\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.getVisualizations(params)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @param {Object} params - set the different params so they can be added to the response object\n   * @param {boolean} params.fetch_related_canonical_visualizations\n   * @param {boolean} params.fetch_user\n   * @param {boolean} params.load_related_canonical_visualizations\n   * @param {boolean} params.related\n   * @param {boolean} params.show_auth_tokens\n   * @param {boolean} params.show_liked\n   * @param {boolean} params.show_likes\n   * @param {boolean} params.show_permission\n   * @param {boolean} params.show_stats\n   * @param {boolean} params.show_synchronization\n   * @param {boolean} params.show_table\n   * @param {boolean} params.show_table_size_and_row_count\n   * @param {boolean} params.show_user\n   * @param {boolean} params.show_user_basemaps\n   * @param {boolean} params.show_uses_builder_features\n   * @param {string} params.password\n   *\n   * @param {Array} params.types\n   * @param {boolean} params.bbox\n   * @param {boolean} params.exclude_raster (default: true)\n   * @param {boolean} params.exclude_shared (default: true)\n   * @param {boolean} params.locked\n   * @param {boolean} params.only_liked (default: true)\n   * @param {boolean} params.only_shared (default: true)\n   * @param {boolean} params.only_with_display_name (default: true)\n   * @param {boolean} params.shared\n   * @param {boolean} params.tags\n   * @param {boolean} params.with_id_or_name\n   * @param {number} params.page\n   * @param {number} params.per_page\n   * @param {string} params.order\n   * @param {string} params.privacy\n   * @param {string} params.type\n   *\n   * @returns {Promise<object>} fetch response in json format\n   */\n  getVisualizations (params) {\n    const URI_PARAMS = RequestUtils.paramsToURI(params);\n\n    return this.get([Paths.VIZ, URI_PARAMS]);\n  },\n\n  /**\n   * Get visualization likes\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.getVisualizationLikes('vizID')\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @returns {Promise<object>} likes in json format\n   */\n\n  getVisualizationLikes (vizID) {\n    const VIZ_PATH = `/${vizID}`;\n\n    return this.get([Paths.VIZ, VIZ_PATH, ApiDataPath.LIKES]);\n  },\n\n  /**\n   * Get visualization likes detailed list\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.getVisualizationLikesDetailed('vizID')\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @returns {Promise<object>} detailed likes in json format\n   */\n  getVisualizationLikesDetailed (vizID) {\n    const VIZ_PATH = `/${vizID}`;\n\n    return this.get([Paths.VIZ, VIZ_PATH, ApiDataPath.LIKES_DETAILED]);\n  },\n\n  /**\n   * Get visualization like information\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.getVisualizationLike('vizID')\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @returns {Promise<object>} like information in json format\n   */\n  getVisualizationLike (vizID) {\n    const VIZ_PATH = `/${vizID}`;\n\n    return this.get([Paths.VIZ, VIZ_PATH, ApiDataPath.LIKE]);\n  },\n\n  /**\n   * Like a visualization by id\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.likeVisualization('vizID')\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @returns {Promise<object>} like information in json format\n   */\n  likeVisualization (vizID) {\n    const VIZ_PATH = `/${vizID}`;\n\n    return this.post([Paths.VIZ, VIZ_PATH, ApiDataPath.LIKE]);\n  },\n\n  /**\n   * Unlike a visualization by id\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.unlikeVisualization('vizID')\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @returns {Promise<object>} unlike information in json format\n   */\n  unlikeVisualization (vizID) {\n    const VIZ_PATH = `/${vizID}`;\n\n    return this.delete([Paths.VIZ, VIZ_PATH, ApiDataPath.LIKE]);\n  },\n\n  /**\n   * Get watching information for a visualization\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.unlikeVisualization('vizID')\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @returns {Promise<object>} watching list in json format\n   */\n  getVisualizationWatching (vizID) {\n    const VIZ_PATH = `/${vizID}`;\n\n    return this.get([Paths.VIZ, VIZ_PATH, ApiDataPath.WATCHING]);\n  },\n\n  /**\n   * Get watching information for a visualization\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.unlikeVisualization('vizID')\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @returns {Promise<object>} watching list in json format\n   */\n  notifyVisualizationWatching (vizID) {\n    const VIZ_PATH = `/${vizID}`;\n\n    return this.put([Paths.VIZ, VIZ_PATH, ApiDataPath.WATCHING]);\n  },\n\n  /**\n   * Get a preview of a visualization\n   *\n   * @memberof CartoApiClient.AuthenticatedClient\n   * @example\n   * client.getVisualizationPreview('vizID', 200, 200)\n   *   .then(console.log)\n   *   .catch(console.error);\n   *\n   * @returns {Promise<object>} visualization image\n   */\n  getVisualizationPreview (vizID, width, height) {\n    const VIZ_PATH = `/${vizID}`;\n    const WIDTH = `/${width}`;\n    const HEIGHT = `/${height}`;\n\n    return this.get([\n      Paths.VIZ_PREVIEW,\n      VIZ_PATH,\n      ApiDataPath.STATIC,\n      WIDTH,\n      HEIGHT,\n      ApiDataPath.PNG_EXTENSION\n    ]);\n  },\n\n  getMap (mapID, params) {\n    const MAP_PATH = `/${mapID}`;\n    const URI_PARAMS = RequestUtils.paramsToURI(params);\n\n    return this.get([Paths.MAPS, MAP_PATH, URI_PARAMS]);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/clients/authenticated.js","export const ApiDataPath = Object.freeze({\n  COLUMNS: '/columns',\n  CONFIG: '/me',\n  TABLES: '/tables',\n  VIZ: '/viz',\n  MAPS: '/maps',\n  LIKE: '/like',\n  LIKES: '/likes',\n  LIKES_DETAILED: '/likes/detailed',\n  WATCHING: '/watching',\n  STATIC: '/static',\n  PNG_EXTENSION: '.png'\n});\n\nexport const ApiVersionPath = Object.freeze({\n  API_V1_URI: '/api/v1',\n  API_V2_URI: '/api/v2',\n  API_V3_URI: '/api/v3'\n});\n\nexport const Paths = Object.freeze({\n  COLUMNS: ApiDataPath.COLUMNS,\n  CONFIG: `${ApiVersionPath.API_V3_URI}${ApiDataPath.CONFIG}`,\n  TABLES: `${ApiVersionPath.API_V1_URI}${ApiDataPath.TABLES}`,\n  VIZ: `${ApiVersionPath.API_V1_URI}${ApiDataPath.VIZ}`,\n  MAPS: `${ApiVersionPath.API_V1_URI}${ApiDataPath.MAPS}`,\n  VIZ_PREVIEW: `${ApiVersionPath.API_V2_URI}${ApiDataPath.VIZ}`\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants/paths.js","/**\n * Carto Api Error Emitter\n *\n *\n * @namespace CartoApiClient.ApiClientError\n * @return {ApiClientError}\n */\n\nexport const ApiClientError = {\n  /**\n   * Send a custom ApiClientError response\n   *\n   * @memberof CartoApiClient.ApiClientError\n   * @example\n   * client\n   *   .getUser()\n   *   .then((data) => {\n   *     throw CartoApiClient.ApiClientError.send(data);\n   *   })\n   *   .catch((error) => {\n   *     // Handle custom error\n   *   });\n   *\n   * @param {Object} data - information about the error\n   * @param {Object} data.errors - list of errors, with the format { errorType: ['error_1', 'error_2'] }\n   * @param {string} data.message - description of the error\n   *\n   * @returns {Object} errors - list of errors, with the format {}\n   * @returns {Object} message - description of the error\n   * @returns {Object} name - ApiClientError\n   * @returns {Object} stack - stack trace of the current error\n   */\n\n  send (data) {\n    return {\n      errors: data.errors || {},\n      message: data.message || '',\n      name: 'ApiClientError',\n      stack: (new Error()).stack\n    };\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/errors/api-client.js"],"sourceRoot":""}